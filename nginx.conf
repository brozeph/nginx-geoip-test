worker_processes          2;

events {
  worker_connections      8096;
  multi_accept            on;
}

worker_rlimit_nofile      40000;

http {

  ##
  # Basic Settings
  ##

  sendfile                on;
  tcp_nopush              on;
  tcp_nodelay             on;
  keepalive_timeout       15;
  types_hash_max_size     2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Gzip Settings
  ##

  gzip                    on;
  gzip_disable            "msie [1-6]\.";
  gzip_vary               on;
  gzip_min_length         10240;
  gzip_proxied            expired no-cache no-store private auth;
  # gzip_comp_level       6;
  # gzip_buffers          16  8k;
  # gzip_http_version     1.1;
  gzip_types              text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  ##
  # Real IP Settings
  ##
  set_real_ip_from        10.0.0.0/22;
  real_ip_header          X-Forwarded-For;

  ##
  # Throttling Settings
  ##
  geo $throttle_whitelist {
    default 0;

    # CIDR in the list below are not throttled (rate-limited)
    10.0.0.0/22 1;
  }

  map $throttle_whitelist $throttle_limit {
    0   $http_x_real_ip;
    1   "";
  }

  # The code below limits the number requests from a non-whitelisted IP
  # to one every two seconds with up to 3 requests per IP delayed
  # until the average time between responses reaches the threshold.
  # Further requests over and above this limit will result
  # in an immediate 503 error.

  limit_req_zone          $throttle_limit zone=one:100m rate=30r/m;

  limit_req               zone=one            burst=3;
  limit_req_log_level     warn;
  limit_req_status        503;

  ##
  # GeoIP Settings
  ##
  geoip_city              /usr/share/GeoIP/GeoLiteCity.dat;
  geoip_proxy             10.0.0.2/22;

  ##
  # Logging Settings
  ##

  # The following creates a filter where only status codes that are not 2xx or 3xx are logged
  map $status $loggable {
    ~^[23]    0;
    default   1;
  }

  log_format              pn_log                      '$remote_addr - $remote_user [$time_local] '
                                                      '"$request" $status $body_bytes_sent $request_time '
                                                      '"$http_referer" "$http_user_agent"';

  access_log              /var/log/nginx/access.log   pn_log  if=$loggable;
  error_log               /var/log/nginx/error.log;

  server {
    listen                80  default_server;
    server_name           _;

    rewrite   ^ https://$host$request_uri?  permanent;
  }

  server {
    listen                443                 default_server;
    server_name           _;

    ssl                   on;
    ssl_certificate       /home/ubuntu/source/nginx-geoip-test/cert.pem;
    ssl_certificate_key   /home/ubuntu/source/nginx-geoip-test/key.pem;
    ssl_session_timeout   60m;

    client_max_body_size  10M;
    keepalive_timeout     10;

    location / {
      proxy_connect_timeout                   240;
      proxy_read_timeout                      480;

      # Host and Protocol Info
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto   $scheme;
      proxy_set_header    Host                $http_post;

      # GeoIP Headers
      proxy_set_header    X-City              $geoip_city;
      proxy_set_header    X-Country           $geoip_city_country_code;
      proxy_set_header    X-Country-Name      $geoip_city_country_name;
      proxy_set_header    X-Latitude          $geoip_latitude;
      proxy_set_header    X-Longitude         $geoip_longitude;
      proxy_set_header    X-Postal-Code       $geoip_postal_code;

      # Pass to the underlying server
      proxy_pass          http://localhost:8000;
      proxy_redirect      off;
    }
  }
}
